#!/bin/bash

# Khai b√°o bi·∫øn
REBUILD=false
SERVICE=""

# X·ª≠ l√Ω c√°c t√πy ch·ªçn
while getopts "rs:" opt; do
  case $opt in
    r|R)
      REBUILD=true
      ;;
    s|S)
      SERVICE=$OPTARG
      ;;
    \?)
      echo "‚ùå Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

# Ki·ªÉm tra thay ƒë·ªïi trong source code
check_changes() {
  local service_path=$1
  if [[ -d "$service_path" ]]; then
    git -C "$service_path" diff --quiet || return 0
  else
    git diff --quiet || return 0
  fi
  return 1
}

# H√†m rebuild to√†n b·ªô
rebuild_all() {
  echo "üõ†Ô∏è Rebuilding to√†n b·ªô services..."
  docker-compose down
  
  # X√≥a containers, images c≈©
  docker ps -q | xargs -r docker stop
  docker ps -a -q | xargs -r docker rm
  docker images -q | xargs -r docker rmi -f
  
  docker-compose build --no-cache
  docker-compose up -d --remove-orphans
}

# H√†m rebuild m·ªôt service
rebuild_service() {
  local service=$1
  local service_path="./$service"
  
  echo "üîÑ Restarting service: $service..."
  
  docker-compose stop "$service"
  docker-compose rm -f "$service"
  
  if [[ "$REBUILD" = "true" ]] || check_changes "$service_path"; then
    echo "üõ†Ô∏è Rebuilding $service..."
    docker-compose build --no-cache "$service"
  fi
  
  docker-compose up -d "$service"
}

# Th·ª±c hi·ªán v·ªõi to√†n b·ªô services n·∫øu kh√¥ng ch·ªâ ƒë·ªãnh
if [[ -z "$SERVICE" ]]; then
  rebuild_all
else
  rebuild_service "$SERVICE" 
fi
